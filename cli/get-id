#!/usr/bin/env python3
from fire import Fire
import boto3
from botocore.config import Config
import json

def connect(service: str = 'ec2', profile: str = 'default', region: str = 'us-east-2'):
  try:
    config = Config(region_name=region)
    session = boto3.Session(profile_name=profile)

    return session.client(service, config=config)
  except Exception as err:
    print('connect.error', err)
    raise err

def getInstanceName(instance):
  name = ''
  tags = instance.get('Tags')
  if tags:
    for t in tags:
      if t['Key'] == 'Name':
        name = t['Value']

  return name

def handler(siteName, type: str = '', profile: str = 'default'):
  try:
    ids = {}
    if profile and profile != 'default':
      ec2 = connect(profile=profile)
    else:
      ec2 = connect()
    filters = [
      {'Name': 'tag:project', 'Values': ['athena']},
      {'Name': 'tag:tenant', 'Values': [str(siteName)]}
    ]
    if type != '':
      filters.append({'Name': 'tag:type', 'Values': [type]})
    # print(filters)
    resp = ec2.describe_instances(Filters=filters)
    if resp:
      rs = resp.get('Reservations')
      if rs:
        for r in rs:
          instances = r.get('Instances')
          if instances:
            for i in instances:
              name = getInstanceName(i)
              ids[name] = i.get('InstanceId')
    for i in ids:
      print(i, ids[i])
  except Exception as err:
    print('handler.error', err)
    raise err

# Test
if __name__ == '__main__':
  Fire(handler)